{"ast":null,"code":"import{Alert,Progress}from'reactstrap';import Concerts from'./../Concerts/Concerts';import{useSelector,useDispatch}from'react-redux';import{getConcerts,getRequest,loadConcertsRequest}from'../../../redux/concertsRedux';import{useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const Lineup=()=>{const dispatch=useDispatch();const concerts=useSelector(getConcerts);const request=useSelector(getRequest);useEffect(()=>{dispatch(loadConcertsRequest());},[dispatch]);if(request.pending)return/*#__PURE__*/_jsx(Progress,{animated:true,color:\"primary\",value:50});else if(request.error)return/*#__PURE__*/_jsx(Alert,{color:\"warning\",children:request.error});else if(!request.success||!concerts.length)return/*#__PURE__*/_jsx(Alert,{color:\"info\",children:\"No concerts\"});else if(request.success)return/*#__PURE__*/_jsx(Concerts,{concerts:concerts});};export default Lineup;","map":{"version":3,"names":["Alert","Progress","Concerts","useSelector","useDispatch","getConcerts","getRequest","loadConcertsRequest","useEffect","jsx","_jsx","Lineup","dispatch","concerts","request","pending","animated","color","value","error","children","success","length"],"sources":["D:/KODILLA/express-2/client/src/components/features/Lineup/Lineup.js"],"sourcesContent":["import { Alert, Progress } from 'reactstrap';\r\n\r\nimport Concerts from './../Concerts/Concerts';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getConcerts, getRequest, loadConcertsRequest } from '../../../redux/concertsRedux';\r\nimport { useEffect } from 'react';\r\n\r\nconst Lineup = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const concerts = useSelector(getConcerts)\r\n  const request = useSelector(getRequest);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadConcertsRequest())\r\n  }, [dispatch]);\r\n\r\n  if(request.pending) return <Progress animated color=\"primary\" value={50} />; \r\n  else if(request.error) return <Alert color=\"warning\">{request.error}</Alert>;\r\n  else if(!request.success || !concerts.length) return <Alert color=\"info\">No concerts</Alert>;\r\n  else if(request.success) return (\r\n    <Concerts concerts={concerts} />\r\n  )\r\n\r\n}\r\n\r\nexport default Lineup;"],"mappings":"AAAA,OAASA,KAAK,CAAEC,QAAQ,KAAQ,YAAY,CAE5C,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAC7C,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,WAAW,CAAEC,UAAU,CAAEC,mBAAmB,KAAQ,8BAA8B,CAC3F,OAASC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElC,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CAEnB,KAAM,CAAAC,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAS,QAAQ,CAAGV,WAAW,CAACE,WAAW,CAAC,CACzC,KAAM,CAAAS,OAAO,CAAGX,WAAW,CAACG,UAAU,CAAC,CAEvCE,SAAS,CAAC,IAAM,CACdI,QAAQ,CAACL,mBAAmB,CAAC,CAAC,CAAC,CACjC,CAAC,CAAE,CAACK,QAAQ,CAAC,CAAC,CAEd,GAAGE,OAAO,CAACC,OAAO,CAAE,mBAAOL,IAAA,CAACT,QAAQ,EAACe,QAAQ,MAACC,KAAK,CAAC,SAAS,CAACC,KAAK,CAAE,EAAG,CAAE,CAAC,CAAC,IACvE,IAAGJ,OAAO,CAACK,KAAK,CAAE,mBAAOT,IAAA,CAACV,KAAK,EAACiB,KAAK,CAAC,SAAS,CAAAG,QAAA,CAAEN,OAAO,CAACK,KAAK,CAAQ,CAAC,CAAC,IACxE,IAAG,CAACL,OAAO,CAACO,OAAO,EAAI,CAACR,QAAQ,CAACS,MAAM,CAAE,mBAAOZ,IAAA,CAACV,KAAK,EAACiB,KAAK,CAAC,MAAM,CAAAG,QAAA,CAAC,aAAW,CAAO,CAAC,CAAC,IACxF,IAAGN,OAAO,CAACO,OAAO,CAAE,mBACvBX,IAAA,CAACR,QAAQ,EAACW,QAAQ,CAAEA,QAAS,CAAE,CAAC,CAGpC,CAAC,CAED,cAAe,CAAAF,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}